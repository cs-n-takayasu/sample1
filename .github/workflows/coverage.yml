# This workflow will install dependencies, create coverage tests and run Pytest Coverage Comment
# For more information see: https://github.com/MishaKav/pytest-coverage-comment/
name: pytest-coverage-comment
on:
  pull_request:
    branches:
      - '*'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Setup Reviewdog with action
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest

      - name: Install dependencies
        run: |
          pip install black==23.1.0 bandit==1.7.5 poetry==1.4.0 poetry-audit-plugin==0.3.0

      - name: Poetry Install
        run: |    
          poetry self add poetry-audit-plugin
          poetry install

      - uses: reviewdog/action-pytest@v1
        with:
          github_token: ${{ secrets.REVIEWDOG_GITHUB_TOKEN }}
          # Change reviewdog reporter if you need [github-pr-check,github-check,github-pr-review].
          reporter: github-pr-review
          # Change reporter level if you need.
          # GitHub Status Check won't become failure with warning.
          level: warning
      # - name: Test with pytest
      #   env:
      #     REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.REVIEWDOG_GITHUB_TOKEN }}
      #   run: |
      #     poetry run pytest tests -v --cov=src/ --cov-fail-under=80
      #     reviewdog -efm="%f:%l: %m" -reporter=github-pr-review

      # - name: Build coverage file
      #   run: |
      #     poetry run pytest --junitxml=pytest.xml --cov-report=term-missing:skip-covered --cov=src/ tests | tee pytest-coverage.txt

      # - name: Pytest coverage comment
      #   uses: MishaKav/pytest-coverage-comment@main
      #   with:
      #     multiple-files: |
      #       test_addDef, ./data/pytest-coverage_3.txt, ./data/pytest_junit_1.xml
      #       test_fizbuzz, ./data/pytest-coverage_4.txt, ./data/pytest_junit_2.xml